user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log;
error_log  /var/log/nginx/error.log  notice;
error_log  /var/log/nginx/error.log  info;

#pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
    use epoll;
}

http{

    include       mime.types;
    default_type  application/octet-stream;
    gzip  on;

    server {
        listen 80 default_server;
        server_name localhost;
        root /srv/www/htdocs;
        index index.html, index.htm;

        #proxy_cache off;

        location /{
            index index.html;
        }

        # client side JS etc pp is served statically from the node
        # instance (or some other places
        location ~ ^/(images/|img/|javascripts/|js/|css/|stylesheets/|flash/|media/|static/|robots.txt|humans.txt|favicon.ico) {
              root /home/schinkel/temp/nodeNews/public;
              access_log off;
              expires max;
            }

        # simple redirect $dir to $otherDir with authentication
        location /bilder{
            auth_basic "Please go away";
            auth_basic_user_file /etc/nginx/htpasswd;
            rewrite ^/bilder(.*)$ /img$1 break;
            index index.html;
        }

        location /devel/ {
            auth_basic "You do not belong here";
            auth_basic_user_file /etc/nginx/htpasswd;

            rewrite ^/devel(/.*)$ $1 break;
            proxy_pass  http://127.0.0.1:4444;
            proxy_redirect    http://127.0.0.1:4444/ /devel;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }



        location /node1/ {
            # the crucial part is rewriting of path to the path required 
            # by the node, which is probably "/" and not "/node1/"
            rewrite ^/node1(/.*)$ $1 break;
            #proxy_pass  http://127.0.0.1:3000/; 
            proxy_pass  http://nodeHost3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_redirect    off;
        }


        location /node2/ {
            rewrite ^/node2(/.*)$ $1 break;
            proxy_pass  http://nodeHost4000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_redirect    off;
        }

        # loadbalance/high availability template
        # that splits 50/50 to node instance
        location /HA/ {
            rewrite ^/HA(/.*)$ $1 break;
            proxy_pass  http://node;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_redirect    off;
        }

        # dedicated 404 and 50x pages
        error_page  404              /404.html;
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /srv/www/htdocs/;
        }

    }

    server {
        # for devel, the server will listen at port 1111
        listen 1111 default_server;
        server_name localhost;
        root /srv/www/htdocs;
        index index.html, index.htm;

        #proxy_cache off;

        location /{
            auth_basic "Please go away";
            auth_basic_user_file /etc/nginx/htpasswd;    
            proxy_pass  http://127.0.0.1:4444;
            proxy_redirect    http://127.0.0.1:4444 /;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }

    #     # client side JS etc pp is served statically from the node
    #     # instance (or some other places
    #     location ~ ^/(images/|img/|javascripts/|js/|css/|stylesheets/|flash/|media/|static/|robots.txt|humans.txt|favicon.ico) {
    #           root /home/schinkel/temp/nodeNews/public;
    #           access_log off;
    #           expires max;
    #         }

        # dedicated 404 and 50x pages
        error_page  404              /404.html;
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /srv/www/htdocs/;
        }

    }

    # upstream pool definition
    upstream nodeHost3000{
        server localhost:3000;
    }
    upstream nodeHost4000{
        server localhost:4000;
    }

    # for load-balancing, this can be used
    upstream node{
        server localhost:3000;
        server localhost:4444;
    }
}

## see nginx.conf.default for further examples
